.form-control {
  outline: none;
  height: 50px;
  font-size: 14px;
  padding: 0 20px;
  border: none;
  height: 50px;
  border-radius: 0;
  border: 1px solid #ddd;
  transition: all 0.4s ease;
  box-shadow: 0 0 0 transparent;
  background-color: transparent;
  @include placeholder() {
    opacity: 1;
    font-size: 14px;
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 #000;
    border-color: $color-1st;
  }
}

textarea.form-control {
  height: auto;
  padding: 2rem;
  resize: none;
}

.ps-checkbox {
  position: relative;
  display: block;

  > input {
    position: absolute;
    visibility: hidden;
  }

  label {
    margin-bottom: 0;
    position: relative;
    padding-left: 30px;
    font-family: $font-1st;
    color: rgba($color-heading, 0.5);
    font-weight: 400;
    cursor: pointer;

    &:before {
      content: "";
      display: block;
      position: absolute;
      left: 0;
      top: 0px;
      height: 20px;
      width: 20px;
      z-index: 10;
      border: 1px solid $color-heading;
      transition: all 0.4s ease;
    }

    &:after {
      content: "";
      display: block;
      position: absolute;
      top: 4px;
      left: 7px;
      width: 6px;
      height: 10px;
      border: 2px solid #fff;
      border-top: none;
      border-left: none;
      z-index: 10;
      opacity: 0;
      @include transform(rotate(0deg));
      transition: all 0.4s ease;
    }
  }

  input[type="checkbox"]:checked ~ label {
    &:before {
      background-color: $color-2nd;
      border-color: $color-2nd;
    }

    &:after {
      @include transform(rotate(45deg));
      opacity: 1;
    }
  }

  &--circle {
    label {
      font-size: 20px;
      font-weight: 600;
      color: #555;

      &:before {
        border-radius: 50%;
        border-color: #595959;
      }
    }

    input[type="checkbox"]:checked ~ label {
      &:before {
        background-color: transparent;
      }

      &:after {
        background-color: $color-1st;
        border-radius: 50%;
        border: none;
        width: 14px;
        height: 14px;
        top: 3px;
        left: 3px;
      }
    }
  }

  &--inline {
    display: inline-block;
    margin-bottom: 1rem;
  }

  &--color {
    margin-right: 1rem;

    > label {
      margin-bottom: 0;
      width: 20px;
      height: 20px;
      padding-left: 0;
      background-color: transparent;
      border-radius: 50%;
      transition: all 0.4s ease;

      &:before {
        width: 20px;
        height: 20px;
        @include center();
        border: none;
        border-radius: 50%;
      }

      &:after {
        display: none !important;
      }
    }

    input[type="radio"]:checked ~ label {
      background-color: transparent;

      &:before {
        background-color: transparent;
        border: 1px solid #ccc;
      }
    }
  }

  &--size {
    margin-right: 1rem;

    > label {
      margin-bottom: 0;
      padding: 8px 20px;
      border: none;
      color: #222222;
      background-color: #f6f6f6;
      border-radius: 0;
      transition: all 0.4s ease;

      &:before,
      &:after {
        display: none;
      }
    }

    input[type="checkbox"]:checked ~ label {
      color: #ffffff;
      background-color: #a7a7a7;
    }
  }
}

.ps-radio {
  position: relative;

  > input {
    position: absolute;
    visibility: hidden;
  }

  label {
    position: relative;
    margin-bottom: 0;
    padding-left: 30px;
    font-family: $font-1st;
    color: #737373;
    font-weight: 400;
    cursor: pointer;

    &:before {
      content: "";
      display: block;
      position: absolute;
      left: 0;
      top: 0px;
      height: 20px;
      width: 20px;
      z-index: 10;
      border: 1px solid rgba(19, 8, 1, 0.2);
      background-color: #fff;
      transition: all 0.4s ease;
      border-radius: 50%;
    }

    &:after {
      content: "";
      display: block;
      position: absolute;
      top: 5px;
      left: 5px;
      width: 10px;
      height: 10px;
      border-radius: 50%;
      background-color: #fff;
      z-index: 15;
      opacity: 0;
      @include transform(scale(1.5, 1.5));
      transition: all 0.6s ease;
    }
  }

  input[type="radio"]:checked ~ label {
    &:before {
      background-color: transparent;
    }

    &:after {
      background-color: $color-1st;
      border-radius: 50%;
      border: none;
      width: 8px;
      height: 8px;
      top: 6px;
      left: 6px;
      opacity: 1;
    }
  }

  &--inline {
    display: inline-block;
    margin-right: 20px;
  }

  &--color {
    margin-right: 1rem;

    > label {
      margin-bottom: 0;
      width: 20px;
      height: 20px;
      padding-left: 0;
      background-color: transparent;
      border-radius: 50%;
      transition: all 0.4s ease;

      &:before {
        width: 16px;
        height: 16px;
        @include center();
        border: none;
      }

      &:after {
        display: none !important;
      }
    }

    input[type="radio"]:checked ~ label {
      background-color: rgba(#3dc47e, 0.5);
    }
  }
}

.form-group {
  margin-bottom: 2.5rem;

  > label {
    margin-bottom: 1.5rem;
    font-weight: 400;
    color: #000000;
    line-height: 1em;
    font-size: 14px;
    sup {
      color: $color-danger;
    }
  }

  @media (min-width: 992px) {
  }
}

.form-group--inline {
  position: relative;
  width: 100%;
  display: flex;
  flex-flow: row nowrap;
  align-items: center;

  > label {
    margin-bottom: 0;
    font-weight: 700;
    max-width: 160px;
  }

  .form-group__content {
    width: 100%;
  }

  @include media("<sm") {
    display: block;
  }
}

.form-group--number {
  display: inline-block;
  position: relative;

  button {
    @include vertical-align();
    width: 20px;
    height: 20px;
    max-width: 20px;
    color: $color-heading;
    font-size: 30px;
    border: none;
    background: none;

    &.up {
      right: 12px;

      &:before,
      &:after {
        position: absolute;
        top: 50%;
        left: 50%;

        display: inline-block;
        content: "";
        width: 14px;
        height: 1px;
        background-color: $color-text;
      }

      &:before {
        @include transform(translate(-50%, -50%) rotate(90deg));
      }

      &:after {
        @include transform(translate(-50%, -50%) rotate(0deg));
      }
    }

    &.down {
      left: 12px;

      &:before {
        position: absolute;
        top: 50%;
        left: 50%;
        display: inline-block;
        content: "";
        width: 14px;
        height: 1px;
        background-color: $color-text;
        @include transform(translate(-50%, -50%) rotate(0deg));
      }
    }
  }

  .form-control {
    border: 2px solid #eaeaea;
    height: 45px;
    padding: 0 25px;
    font-size: 18px;
    font-weight: 600;
    text-align: center;
    color: $color-heading;
    background-color: transparent;
    @include placeholder() {
      color: $color-heading;
    }
  }
}

.form-group--select {
  position: relative;

  i {
    @include vertical-align();
    right: 20px;
  }

  select {
    height: 40px;
    padding: 0 20px;
    @include appearance(none);
    background-color: transparent;
    border: 1px solid #ccc;
    border-radius: 50px;
  }
}

.form-group--nest {
  display: flex;
  flex-flow: row nowrap;

  .ps-btn {
    border-radius: 0 4px 4px 0;
    padding-left: 25px;
    padding-right: 25px;
    height: 45px;
  }

  input {
    border-radius: 4px 0 0 4px;
    border-color: #ccc;
    border-right: none;
    height: 45px;
  }
}

.form-group--icon {
  position: relative;

  button {
    right: 10px;
    width: 40px;
    height: 40px;
    display: flex;
    justify-content: center;
    align-items: center;
    background: none;
    border: none;
    @include vertical-align();

    i {
      &:before {
        font-size: 20px;
      }
    }
  }

  .form-control {
    @include appearance(none);
  }
}

.ps-dropdown {
  position: relative;
  display: inline-block;

  > a {
    position: relative;
    display: block;
    padding-right: 20px;

    &:after {
      content: "\e93a";
      font: normal normal normal 12px/1 linearicons;
      @include vertical-align();
      right: 0;
    }
  }

  ul {
    position: absolute;
    top: 100%;
    right: 0;
    z-index: 100;
    min-width: 120px;
    max-width: 200px;
    width: 100%;
    padding: 4px 0;
    background-color: #fff;
    box-shadow: 0 1px 1px 2px rgba(#ccc, 0.2);
    @include hidden;
    text-align: left;

    li {
      list-style-type: none;
      margin: 0;
      padding: 0;

      a {
        display: block;
        font-size: 1.3rem;
        color: $color-heading;
        padding: 6px 10px;
      }
    }
  }

  &:hover {
    ul {
      @include show;
    }
  }

  &.open {
    ul {
      @include show;
    }
  }
}

.form-group--inside {
  position: relative;

  button {
    right: 10px;
    border: none;
    color: #ce873a;
    background-color: transparent;
    @include vertical-align();

    &:hover {
      color: darken(#ce873a, 10%);
    }
  }
}

.ps-color {
  display: flex;
  justify-content: space-between;
  color: #bbb;
  width: 100%;

  .ps-color__swatch {
    display: inline-block;
    margin-right: 10px;
    width: 15px;
    height: 15px;
    border-radius: 50%;
    vertical-align: middle;
  }

  .ps-color__left {
    i {
      font-size: 14px;
      color: #999;
      font-style: normal;
    }
  }

  .ps-color__right {
    i {
      color: #eaeaea;
    }
  }

  &.black {
    .ps-color__swatch {
      background-color: #000;
    }
  }

  &.blue {
    .ps-color__swatch {
      background-color: #70849d;
    }
  }

  &.gold {
    .ps-color__swatch {
      background-color: #cc9900;
    }
  }

  &.nude {
    .ps-color__swatch {
      background-color: #cfa58f;
    }
  }

  &.orange {
    .ps-color__swatch {
      background-color: #cc6600;
    }
  }

  &.red {
    .ps-color__swatch {
      background-color: #990000;
    }
  }

  &.active {
    .ps-color__right {
      i {
        color: $color-heading;

        &:before {
          content: "\e999";
        }
      }
    }
  }
}

.ps-variant {
  position: relative;
  display: inline-block;
  margin-right: 10px;
  width: 18px;
  height: 18px;
  border-radius: 50%;
  z-index: 10;
  border: 1px solid #999;
  cursor: pointer;

  &__tooltip {
    position: absolute;
    bottom: 100%;
    left: 50%;
    padding: 5px 10px;
    @include transform(translate(-50%, -50%));
    background-color: rgba(#000, 0.9);
    border-radius: 2px;
    color: #ffffff;
    font-size: 12px;
    transition: all 0.4s ease;
    @include hidden;

    &:before {
      content: "";
      position: absolute;
      top: 100%;
      left: 50%;
      @include transform(translateX(-50%));
      @include triangle(12px, #000, down);
    }
  }

  &:last-child {
    margin-right: 0;
  }

  &.ps-variant--size {
    position: relative;
    vertical-align: top;
    border: none;
    background-color: #f1f1f1;
    transition: all 0.4s ease;

    .ps-variant__size {
      @include center();
      color: $color-text;
      font-size: 12px;
    }

    &.active {
      .ps-variant__size {
        color: $color-heading;
      }
    }

    &:hover {
      background-color: $color-1st;

      .ps-variant__size {
        color: #ffffff;
      }
    }
  }

  &.ps-variant--color {
    border: 1px solid #ccc;

    &:before {
      content: "";
      width: 14px;
      height: 14px;
      border-radius: 50%;
      @include center();
    }

    &.color--1 {
      &:before {
        background-color: #70849d;
      }
    }

    &.color--2 {
      &:before {
        background-color: #cfa58f;
      }
    }

    &.color--3 {
      &:before {
        background-color: #f06292;
      }
    }
  }

  &.ps-variant--image {
    img {
      border-radius: 50%;
      max-width: 20px;
      @include center;
    }
  }

  &:hover {
    .ps-variant__tooltip {
      @include show;
    }
  }

  &.active {
    &:before {
      border-color: #000;
    }

    .ps-variant__tooltip {
      @include show;
    }
  }
}
/* CSS variables. */
:root {
	--PhoneInput-color--focus: #03b2cb;
	--PhoneInputInternationalIconPhone-opacity: 0.8;
	--PhoneInputInternationalIconGlobe-opacity: 0.65;
	--PhoneInputCountrySelect-marginRight: 0.35em;
	--PhoneInputCountrySelectArrow-width: 0.3em;
	--PhoneInputCountrySelectArrow-marginLeft: var(--PhoneInputCountrySelect-marginRight);
	--PhoneInputCountrySelectArrow-borderWidth: 1px;
	--PhoneInputCountrySelectArrow-opacity: 0.45;
	--PhoneInputCountrySelectArrow-color: inherit;
	--PhoneInputCountrySelectArrow-color--focus: var(--PhoneInput-color--focus);
	--PhoneInputCountrySelectArrow-transform: rotate(45deg);
	--PhoneInputCountryFlag-aspectRatio: 1.5;
	--PhoneInputCountryFlag-height: 1em;
	--PhoneInputCountryFlag-borderWidth: 1px;
	--PhoneInputCountryFlag-borderColor: rgba(0,0,0,0.5);
	--PhoneInputCountryFlag-borderColor--focus: var(--PhoneInput-color--focus);
	--PhoneInputCountryFlag-backgroundColor--loading: rgba(0,0,0,0.1);
}

.PhoneInputCountryIcon {
	width: calc(var(--PhoneInputCountryFlag-height) * var(--PhoneInputCountryFlag-aspectRatio));
	height: var(--PhoneInputCountryFlag-height);
}

.PhoneInputCountryIcon--square {
	width: var(--PhoneInputCountryFlag-height);
}

.PhoneInputCountryIcon--border {
	/* Removed `background-color` because when an `<img/>` was still loading
	   it would show a dark gray rectangle. */
	/* For some reason the `<img/>` is not stretched to 100% width and height
	   and sometime there can be seen white pixels of the background at top and bottom. */
	background-color: var(--PhoneInputCountryFlag-backgroundColor--loading);
	/* Border is added via `box-shadow` because `border` interferes with `width`/`height`. */
	/* For some reason the `<img/>` is not stretched to 100% width and height
	   and sometime there can be seen white pixels of the background at top and bottom,
	   so an additional "inset" border is added. */
	box-shadow: 0 0 0 var(--PhoneInputCountryFlag-borderWidth) var(--PhoneInputCountryFlag-borderColor),
		inset 0 0 0 var(--PhoneInputCountryFlag-borderWidth) var(--PhoneInputCountryFlag-borderColor);
}

.PhoneInputCountryIconImg {
	/* Fixes weird vertical space above the flag icon. */
	/* https://gitlab.com/catamphetamine/react-phone-number-input/-/issues/7#note_348586559 */
	display: block;
	/* 3rd party <SVG/> flag icons won't stretch if they have `width` and `height`.
	   Also, if an <SVG/> icon's aspect ratio was different, it wouldn't fit too. */
	width: 100%;
	height: 100%;
}

.PhoneInputInternationalIconPhone {
	opacity: var(--PhoneInputInternationalIconPhone-opacity);
}

.PhoneInputInternationalIconGlobe {
	opacity: var(--PhoneInputInternationalIconGlobe-opacity);
}

/* Styling native country `<select/>`. */

.PhoneInputCountry {
	position: relative;
	align-self: stretch;
	display: flex;
	align-items: center;
	margin-right: var(--PhoneInputCountrySelect-marginRight);
}

.PhoneInputCountrySelect {
	position: absolute;
	top: 0;
	left: 0;
	height: 100%;
	width: 100%;
	z-index: 1;
	border: 0;
	opacity: 0;
	cursor: pointer;
}

.PhoneInputCountrySelect[disabled] {
	cursor: default;
}

.PhoneInputCountrySelectArrow {
	display: block;
	content: '';
	width: var(--PhoneInputCountrySelectArrow-width);
	height: var(--PhoneInputCountrySelectArrow-width);
	margin-left: var(--PhoneInputCountrySelectArrow-marginLeft);
	border-style: solid;
	border-color: var(--PhoneInputCountrySelectArrow-color);
	border-top-width: 0;
	border-bottom-width: var(--PhoneInputCountrySelectArrow-borderWidth);
	border-left-width: 0;
	border-right-width: var(--PhoneInputCountrySelectArrow-borderWidth);
	transform: var(--PhoneInputCountrySelectArrow-transform);
	opacity: var(--PhoneInputCountrySelectArrow-opacity);
}

.PhoneInputCountrySelect:focus + .PhoneInputCountryIcon + .PhoneInputCountrySelectArrow {
	opacity: 1;
	color: var(--PhoneInputCountrySelectArrow-color--focus);
}

.PhoneInputCountrySelect:focus + .PhoneInputCountryIcon--border {
	box-shadow: 0 0 0 var(--PhoneInputCountryFlag-borderWidth) var(--PhoneInputCountryFlag-borderColor--focus),
		inset 0 0 0 var(--PhoneInputCountryFlag-borderWidth) var(--PhoneInputCountryFlag-borderColor--focus);
}

.PhoneInputCountrySelect:focus + .PhoneInputCountryIcon .PhoneInputInternationalIconGlobe {
	opacity: 1;
	color: var(--PhoneInputCountrySelectArrow-color--focus);
}
.PhoneInput {
	/* This is done to stretch the contents of this component. */
	display: flex;
	align-items: center;
}

.PhoneInputInput {
	/* The phone number input stretches to fill all empty space */
	flex: 1;
	/* The phone number input should shrink
	   to make room for the extension input */
	min-width: 0;
	border: 1px solid lightgrey;
	min-height: 45px;
	padding: 1%;
	transition: all ease 0.2s;
}
.PhoneInputInput:focus {
	border:1px solid orange;
}